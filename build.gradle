import java.nio.file.Files
import java.nio.file.Paths

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'net.minecrell.licenser' version '0.3'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

group = pluginGroup
version = pluginVersion

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://repo.spongepowered.org/maven/' }
}

configurations {
    compile.extendsFrom shadow
    compile.extendsFrom kapt
}

dependencies {
    kapt "org.spongepowered:spongeapi:$spongeVersion"
    shadow 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    shadow 'org.jetbrains.kotlin:kotlin-reflect'
}

shadowJar {
    ext {
        spongeVersion = spongeVersion - '-SNAPSHOT'
    }
    archivesBaseName = "$project.name-$spongeVersion-$kotlinVersion"
    configurations = [project.configurations.shadow]
    classifier = null
}

jar.enabled = false
build.dependsOn shadowJar

license {
    header = project.file('HEADER')
    include '**/*.kt'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

artifacts {
    archives shadowJar
}

if (project.hasProperty('signing.keyId') &&
        project.hasProperty('signing.password') &&
        project.hasProperty('signing.secretKeyRingFile') &&
        Files.exists(Paths.get((String)project.property('signing.secretKeyRingFile')))
) {
    apply plugin: 'signing'


    signing {
        sign configurations.archives
    }

    signArchives.dependsOn shadowJar
}